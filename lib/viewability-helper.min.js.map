{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///viewability-helper.min.js","webpack:///webpack/bootstrap 6eb5f719fe887f3100f0","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","DomHelper","ViewabilityHelper","element","callback","options","_element","_callback","posCalcObj","elementIsViewed","posScrollLock","hasIntersectionObserverSupport","window","callbackParams","rootMargin","intersectPercentage","scrollDimmer","unobserve","threshold","hasOwnProperty","_this","searchForExposedElement","setTimeout","isInsidePos","isInViewport","apply","Helpers","removeDomEvent","windowScrolled","observer","observerCallback","bind","observe","entries","observeElement","PositionCalculation","addDomEvent","ele","event","func","addEventListener","attachEvent","removeEventListener","detachEvent","_this2","viewPortSize","height","width","setViewPortSizeGlobal","isStdBrowser","isIE","isOldIE","result","undefined","innerWidth","document","documentElement","clientWidth","innerHeight","clientHeight","getElementsByTagName","percentage","rect","getBoundingClientRect","viewPort","getViewportSizeGlobal","eleHeight","eleHeightByPercentage","Math","round","top","bottom"],"mappings":"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","file":"viewability-helper.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"viewability-helper\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"viewability-helper\"] = factory();\n\telse\n\t\troot[\"viewability-helper\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"viewability-helper\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"viewability-helper\"] = factory();\n\telse\n\t\troot[\"viewability-helper\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t Copyright 2017 Outbrain Inc\n\t Author: Liron Zluf\n\t\n\t Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"),\n\t to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\t and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t\n\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\tvar ViewabilityHelper = exports.ViewabilityHelper = function () {\n\t  function ViewabilityHelper(element, callback, options) {\n\t    _classCallCheck(this, ViewabilityHelper);\n\t\n\t    // The element to watch\n\t    this._element = element;\n\t    // Callback function\n\t    this._callback = callback;\n\t    // Position Calculation Object\n\t    this.posCalcObj = null;\n\t    // Flag if element is in view\n\t    this.elementIsViewed = false;\n\t    // Dimmer flag for scroll\n\t    this.posScrollLock = false;\n\t    // Feature flag for the intersection observer API\n\t    this.hasIntersectionObserverSupport = typeof window['IntersectionObserver'] === 'function';\n\t    // options object\n\t    this.options = {\n\t      'callbackParams': [],\n\t      'rootMargin': '0px',\n\t      'intersectPercentage': 0,\n\t      'scrollDimmer': 200,\n\t      'unobserve': false,\n\t      'threshold': [1]\n\t    };\n\t\n\t    // merge options with argument options\n\t    for (var key in options) {\n\t      if (options.hasOwnProperty(key)) {\n\t        this.options[key] = options[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback function for scroll event\n\t   */\n\t\n\t\n\t  _createClass(ViewabilityHelper, [{\n\t    key: 'windowScrolled',\n\t    value: function windowScrolled() {\n\t      var _this = this;\n\t\n\t      if (!this.posScrollLock) {\n\t        this.searchForExposedElement();\n\t        setTimeout(function () {\n\t          _this.posScrollLock = false;\n\t        }, this.options['scrollDimmer']);\n\t        this.posScrollLock = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Searches for the element in the viewport\n\t     */\n\t\n\t  }, {\n\t    key: 'searchForExposedElement',\n\t    value: function searchForExposedElement() {\n\t      var isInsidePos = this.posCalcObj.isInViewport(this._element, this.options['intersectPercentage']); // Take the closeness status of the element\n\t      if (isInsidePos) {\n\t        if (!this.elementIsViewed) {\n\t          this.elementIsViewed = true;\n\t          this._callback.apply(this, this.options['callbackParams']);\n\t          if (this.options['unobserve']) {\n\t            this.Helpers.removeDomEvent(window, 'scroll', this.windowScrolled);\n\t            delete this.posCalcObj;\n\t          }\n\t        }\n\t      } else {\n\t        this.elementIsViewed = false;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Observes an element using the Intersection Observer API\n\t     */\n\t\n\t  }, {\n\t    key: 'observeElement',\n\t    value: function observeElement() {\n\t      var options = {\n\t        rootMargin: this.options['rootMargin'],\n\t        threshold: this.options['threshold']\n\t      },\n\t          observer = new window['IntersectionObserver'](this.observerCallback.bind(this), options);\n\t      observer.observe(this._element);\n\t    }\n\t\n\t    /**\n\t     * Intersection Observer Callback\n\t     * @param entries\n\t     * @param observer\n\t     */\n\t\n\t  }, {\n\t    key: 'observerCallback',\n\t    value: function observerCallback(entries, observer) {\n\t      if (entries && entries[0] && entries[0]['intersectionRatio'] > this.options['intersectPercentage']) {\n\t        this._callback.apply(this, this.options['callbackParams']);\n\t        if (this.options['unobserve']) {\n\t          // Stop observing intersections for the current widget\n\t          observer['unobserve'](entries[0]['target']);\n\t          // Stop observing threshold\n\t          observer['disconnect']();\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Start Observing an element\n\t     * Way of observing the element decided using the feature flag\n\t     */\n\t\n\t  }, {\n\t    key: 'observe',\n\t    value: function observe() {\n\t      if (this.hasIntersectionObserverSupport) {\n\t        this.observeElement();\n\t      } else {\n\t        this.posCalcObj = new PositionCalculation();\n\t        DomHelper.addDomEvent(window, 'scroll', this.windowScrolled);\n\t        this.windowScrolled();\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ViewabilityHelper;\n\t}();\n\t\n\tvar DomHelper = function () {\n\t  function DomHelper() {\n\t    _classCallCheck(this, DomHelper);\n\t  }\n\t\n\t  _createClass(DomHelper, null, [{\n\t    key: 'addDomEvent',\n\t    value: function addDomEvent(ele, event, func) {\n\t      if (ele.addEventListener) {\n\t        // Good Guys\n\t        ele.addEventListener(event, func, true);\n\t      } else if (ele.attachEvent && typeof ele.attachEvent === 'function') {\n\t        //Internet Explorer\n\t        ele.attachEvent('on' + event, function () {\n\t          func.call(ele);\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'removeDomEvent',\n\t    value: function removeDomEvent(ele, event, func) {\n\t      if (ele.removeEventListener) {\n\t        // Good Guys\n\t        ele.removeEventListener(event, func, true);\n\t      } else if (ele.detachEvent) {\n\t        //Internet Explorer\n\t        ele.detachEvent('on' + event, func);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return DomHelper;\n\t}();\n\t\n\tvar PositionCalculation = function () {\n\t  function PositionCalculation() {\n\t    var _this2 = this;\n\t\n\t    _classCallCheck(this, PositionCalculation);\n\t\n\t    this.viewPortSize = { height: 0, width: 0 };\n\t\n\t    // First time\n\t    this.setViewPortSizeGlobal();\n\t\n\t    // Only when window resize call the setters\n\t    DomHelper.addDomEvent(window, 'resize', function () {\n\t      _this2.setViewPortSizeGlobal();\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds the user viewport size\n\t   */\n\t\n\t\n\t  _createClass(PositionCalculation, [{\n\t    key: 'setViewPortSizeGlobal',\n\t    value: function setViewPortSizeGlobal() {\n\t      var isStdBrowser = void 0,\n\t          isIE = void 0,\n\t          isOldIE = void 0,\n\t          result = void 0;\n\t\n\t      result = {\n\t        height: 0,\n\t        width: 0\n\t      };\n\t\n\t      // the more standard compliant browsers\n\t      isStdBrowser = window.innerWidth !== undefined;\n\t      // IE6 in standards compliant mode (i.e. with a valid doctype as the first line in the document)\n\t      isIE = document.documentElement !== undefined && document.documentElement.clientWidth !== undefined && document.documentElement.clientWidth !== 0;\n\t      isOldIE = isStdBrowser === false && isIE === false; // older versions of IE\n\t\n\t      if (isStdBrowser) {\n\t        result.height = window.innerHeight;\n\t        result.width = window.innerWidth;\n\t      } else if (isIE) {\n\t        result.height = document.documentElement.clientHeight;\n\t        result.width = document.documentElement.clientWidth;\n\t      } else if (isOldIE) {\n\t        result.height = document.getElementsByTagName('body')[0].clientHeight;\n\t        result.width = document.getElementsByTagName('body')[0].clientWidth;\n\t      }\n\t\n\t      this.viewPortSize = result;\n\t    }\n\t  }, {\n\t    key: 'getViewportSizeGlobal',\n\t    value: function getViewportSizeGlobal() {\n\t      return this.viewPortSize;\n\t    }\n\t\n\t    /**\n\t     * Determines if an element is in the viewport or not\n\t     * @param ele\n\t     * @param percentage\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isInViewport',\n\t    value: function isInViewport(ele, percentage) {\n\t      if (!ele || percentage < 0 || percentage > 100) {\n\t        return false;\n\t      }\n\t\n\t      var rect = ele.getBoundingClientRect(),\n\t          viewPort = this.getViewportSizeGlobal().height,\n\t          eleHeight = ele.clientHeight,\n\t          eleHeightByPercentage = void 0;\n\t\n\t      eleHeightByPercentage = Math.round(eleHeight * percentage / 100); // Calculate the height by the percentage\n\t      eleHeightByPercentage = eleHeightByPercentage > viewPort ? viewPort - 1 : eleHeightByPercentage; // When viewport is smaller than the element height\n\t      return rect.top + eleHeightByPercentage <= viewPort && rect.bottom - eleHeightByPercentage >= 0;\n\t    }\n\t  }]);\n\n\t  return PositionCalculation;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** viewability-helper.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6eb5f719fe887f3100f0\n **/","/*\n Copyright 2017 Outbrain Inc\n Author: Liron Zluf\n\n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"),\n to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nexport class ViewabilityHelper {\n\n  constructor(element, callback, options) {\n    // The element to watch\n    this._element = element;\n    // Callback function\n    this._callback = callback;\n    // Position Calculation Object\n    this.posCalcObj = null;\n    // Flag if element is in view\n    this.elementIsViewed = false;\n    // Dimmer flag for scroll\n    this.posScrollLock = false;\n    // Feature flag for the intersection observer API\n    this.hasIntersectionObserverSupport = (typeof (window['IntersectionObserver']) === 'function');\n    // options object\n    this.options = {\n      'callbackParams': [],\n      'rootMargin': '0px',\n      'intersectPercentage': 0,\n      'scrollDimmer': 200,\n      'unobserve': false,\n      'threshold': [1]\n    };\n\n    // merge options with argument options\n    for (let key in options) {\n      if (options.hasOwnProperty(key)) {\n        this.options[key] = options[key];\n      }\n    }\n  }\n\n  /**\n   * Callback function for scroll event\n   */\n  windowScrolled() {\n    if (!this.posScrollLock) {\n      this.searchForExposedElement();\n      setTimeout(() => {\n        this.posScrollLock = false;\n      }, this.options['scrollDimmer']);\n      this.posScrollLock = true;\n    }\n  }\n\n  /**\n   * Searches for the element in the viewport\n   */\n  searchForExposedElement() {\n    let isInsidePos = this.posCalcObj.isInViewport(this._element, this.options['intersectPercentage']); // Take the closeness status of the element\n    if (isInsidePos) {\n      if (!this.elementIsViewed) {\n        this.elementIsViewed = true;\n        this._callback.apply(this, this.options['callbackParams']);\n        if (this.options['unobserve']) {\n          this.Helpers.removeDomEvent(window, 'scroll', this.windowScrolled);\n          delete this.posCalcObj;\n        }\n      }\n    } else {\n      this.elementIsViewed = false;\n    }\n  }\n\n  /**\n   * Observes an element using the Intersection Observer API\n   */\n  observeElement() {\n    const options = {\n        rootMargin: this.options['rootMargin'],\n        threshold: this.options['threshold']\n      },\n      observer = new window['IntersectionObserver'](this.observerCallback.bind(this), options);\n    observer.observe(this._element);\n  }\n\n  /**\n   * Intersection Observer Callback\n   * @param entries\n   * @param observer\n   */\n  observerCallback(entries, observer) {\n    if (entries && entries[0] && entries[0]['intersectionRatio'] > this.options['intersectPercentage']) {\n      this._callback.apply(this, this.options['callbackParams']);\n      if (this.options['unobserve']) {\n        // Stop observing intersections for the current widget\n        observer['unobserve'](entries[0]['target']);\n        // Stop observing threshold\n        observer['disconnect']();\n      }\n    }\n  }\n\n  /**\n   * Start Observing an element\n   * Way of observing the element decided using the feature flag\n   */\n  observe() {\n    if (this.hasIntersectionObserverSupport) {\n      this.observeElement();\n    } else {\n      this.posCalcObj = new PositionCalculation();\n      DomHelper.addDomEvent(window, 'scroll', this.windowScrolled);\n      this.windowScrolled();\n    }\n  }\n\n}\n\nclass DomHelper {\n  static addDomEvent(ele, event, func) {\n    if (ele.addEventListener) { // Good Guys\n      ele.addEventListener(event, func, true);\n    }\n    else if (ele.attachEvent && (typeof ele.attachEvent === 'function')) { //Internet Explorer\n      ele.attachEvent('on' + event, () => {\n        func.call(ele);\n      });\n    }\n  }\n\n  static removeDomEvent(ele, event, func) {\n    if (ele.removeEventListener) { // Good Guys\n      ele.removeEventListener(event, func, true);\n    }\n    else if (ele.detachEvent) { //Internet Explorer\n      ele.detachEvent('on' + event, func);\n    }\n  }\n}\n\n\nclass PositionCalculation {\n\n  constructor() {\n    this.viewPortSize = {height: 0, width: 0};\n\n    // First time\n    this.setViewPortSizeGlobal();\n\n    // Only when window resize call the setters\n    DomHelper.addDomEvent(window, 'resize', () => {\n      this.setViewPortSizeGlobal();\n    });\n\n  }\n\n  /**\n   * Finds the user viewport size\n   */\n  setViewPortSizeGlobal() {\n    let isStdBrowser, isIE, isOldIE, result;\n\n    result = {\n      height: 0,\n      width: 0\n    };\n\n    // the more standard compliant browsers\n    isStdBrowser = window.innerWidth !== undefined;\n    // IE6 in standards compliant mode (i.e. with a valid doctype as the first line in the document)\n    isIE = (document.documentElement !== undefined) && (document.documentElement.clientWidth !== undefined) && (document.documentElement.clientWidth !== 0);\n    isOldIE = (isStdBrowser === false) && (isIE === false); // older versions of IE\n\n    if (isStdBrowser) {\n      result.height = window.innerHeight;\n      result.width = window.innerWidth;\n    }\n    else if (isIE) {\n      result.height = document.documentElement.clientHeight;\n      result.width = document.documentElement.clientWidth;\n    }\n    else if (isOldIE) {\n      result.height = document.getElementsByTagName('body')[0].clientHeight;\n      result.width = document.getElementsByTagName('body')[0].clientWidth;\n    }\n\n    this.viewPortSize = result;\n  }\n\n  getViewportSizeGlobal() {\n    return this.viewPortSize;\n  }\n\n  /**\n   * Determines if an element is in the viewport or not\n   * @param ele\n   * @param percentage\n   * @returns {boolean}\n   */\n  isInViewport(ele, percentage) {\n    if (!ele || percentage < 0 || percentage > 100) {\n      return false;\n    }\n\n    let rect = ele.getBoundingClientRect(),\n      viewPort = this.getViewportSizeGlobal().height,\n      eleHeight = ele.clientHeight,\n      eleHeightByPercentage;\n\n    eleHeightByPercentage = Math.round((eleHeight * percentage) / 100); // Calculate the height by the percentage\n    eleHeightByPercentage = eleHeightByPercentage > viewPort ? (viewPort - 1) : eleHeightByPercentage; // When viewport is smaller than the element height\n    return ((rect.top + eleHeightByPercentage) <= viewPort && (rect.bottom - eleHeightByPercentage) >= 0);\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/"],"sourceRoot":""}